@model Models.Context.Legacy.StrategicDocuments
@using Domain.Extensions
@using Models.Extensions
@{
    ViewData["SectionTitle"] = "Стратегически документи";
    var documents = (IQueryable<DocumentLinkVM>)ViewBag.documents;
    List<BreadcrumbVM> breadcrumb = ViewBag.Breadcrumb != null ? (List<BreadcrumbVM>)ViewBag.Breadcrumb : new List<BreadcrumbVM>();
}
@section breadcrumbs{
    <div class="breadcrumbs">
        @foreach (var item in breadcrumb)
        {
            <a href="@item.Url">/ @item.Title </a>
        }
    </div>
}


<div class="container-fluid information">
    <div class="row">

        <div class="col-md-9 body">
            <h2>
                @Html.Raw(Model.Title)
            </h2>
            <p class="title">
                @Html.Raw(Model.Summary)
            </p>
            <!-- TABLE DATES -->
            <div class="row">
                <div class="col-md-5">
                    <table class="table table-bordered table--dates table--stripped">
                        <tbody>
                            <!-- LOOP -->
                            <tr>
                                <td>Документът е валиден до края :</td>
                                <td>@Model.ValidTo.ValidToText()</td>
                            </tr>
                            <!-- END LOOP -->

                        </tbody>
                    </table>
                </div>
            </div>
            <!-- END TABLE DATES -->
            @await Component.InvokeAsync("FileList", new { sourceType = GlobalConstants.SourceTypes.StrategicDocuments, sourceId = Model.Id })

        </div>
    </div>
</div>

<div class="breadcrumbs">
    <button onclick="goBack()">< Назад</button>
</div>

<script>
    function goBack() {
        window.history.back();
    }
</script>
<!-- END COMMENTS -->