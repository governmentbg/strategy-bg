@model Models.ViewModels.Questionary.QuestionaryResultsListViewModel
@{
    Layout = "~/Views/Shared/_LayoutQuestionary.cshtml";

    var j = 0;
    var k = 0;
    var m = 0;

    @foreach (var question in Model.Questions)
    {
        @Html.Raw("<span id='questionId" + k.ToString() + "' style='display: none'>" + question.Id.ToString() + "</span>")
        k++;
    }

    k = 0;
}

<div class="row">
    <div class="col-md-1">
    </div>
    <div class="col-md-11">
        <b>Резултати от проведена Анкета</b>
        <br /><br />
    </div>
</div>
<div class="row">
    <div class="col-md-1">
    </div>
    <div class="col-md-11">
        <h2><b>@Model.QuestionaryTitle</b></h2>
        <h4>@Html.Raw(@Model.QuestionaryDescription)</h4>
        <br /><br />
    </div>
</div>

<section class="content">
    @if (Model.Questions.Count() == 0)
    {
        <div class="row">
            <div class="col-lg-12">
                @Html.Raw("По текущата анкета няма получени отговори.")
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-lg-12">
                @Html.Raw("Общ брой участвали в анкетата: " + Model.AnsweredUsersCount.ToString())
                <br />
                <br />
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="data">
                    @foreach (var question in Model.Questions)
                    {
                        <div class="row">
                            <div class="col-lg-5">
                                <b>@Html.Raw("<span id='questionText" + j + "'>" + question.QuestionDescription + "</span>")</b>
                            </div>

                            @{
                                k = 0;
                            }
                            @foreach (var answer in question.answers.Where(x => x.QuestionId == question.Id))
                            {
                                <div class="col-lg-1">
                                    @{
                                        m = 0;
                                    }
                                    @foreach (var possibleAnser in Model.PossibleAnswers)
                                    {
                                        if (k == m)
                                        {
                                            @Html.Raw("<span>" + possibleAnser.Answer + "</span>")
                                        }
                                        m++;
                                    }
                                    @Html.Raw(" - Брой отговорили: " + answer.AnswersCheckedCount + ", Процент: " + answer.AnswersCheckedPercent + "%")
                                </div>
                                k++;
                            }
                        </div>
                        j++;
                        <br />
                    }
                </div>
            </div>
        </div>
    }

    @for (int i = 0; i < Model.Questions.Count(); i++)
    {
        @Html.Raw("<div id='piechart" + i.ToString() + "'></div>")
    }
</section>

<script type="text/javascript" src="~/js/google.loader.js"></script>
<script type="text/javascript">
        // Load google charts
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        // Draw the chart and set the chart values
        function drawChart() {
            // Create our data table out of JSON data loaded from server.
            for (var i = 0; i < @Model.Questions.Count(); i++) {
                var jsonData = $.ajax({
                    url: '@Url.Action("QuestinaryResultsLoadData")',
                    data: {
                        'questionaryHeaderId': @Model.QuestionaryHeaderId,
                        'questionaryQuestionId': $("#questionId" + i).html()
                    },
                    "type": "POST",
                    dataType: "json",
                    async: false,
                    success: function (data) {
                        data3 = getData(data);
                    }
                }).responseText;

                // Optional; add a title and set the width and height of the chart
                var text = $("#questionText" + i.toString()).html();
                var options = { 'title': text, 'width': 550, 'height': 400 };

                // Display the chart inside the <div> element with id="piechart"
                var chart_div = document.getElementById('piechart' + i.toString());
                var chart = new google.visualization.PieChart(chart_div);

                // Wait for the chart to finish drawing before calling the getImageURI() method.
                //google.visualization.events.addListener(chart, 'ready', function () {
                //    //chart_div.innerHTML = '<img src="' + chart.getImageURI() + '" />';
                //    chart_div.innerHTML = '<img src="/img/footer/esf_logo.png" />';
                //    //$("#test").attr("src", chart.getImageURI());
                //    //chart_div.innerHTML = '<img alt="Embedded Image"  src="' + Url.Content(chart.getImageURI()) + '" />';
                //    //AddNamespace();
                //    //console.log(chart_div.innerHTML);
                //});

                chart.draw(data3, options);
            }
        }

        //function getData(chart_data) {
        //    var jsonData = chart_data;
        //    var data = new google.visualization.DataTable();
        //    data.addColumn('string', 'ColumnName');
        //    data.addColumn('number', 'Value');
        //    $.each(jsonData, function (i, jsonData) {
        //        var columnName = jsonData.columnName;
        //        var columnValue = parseFloat($.trim(jsonData.value));
        //        data.addRows([[columnName, columnValue]]);
        //    });
        //    return data;
        //}
</script>
